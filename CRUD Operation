npm init -y
npm install mysql2
npm install express body-parser mysql2

app.js

const express = require('express');
const bodyParser = require('body-parser');
const mysql = require('mysql2'); // Using mysql2 for better compatibility

const app = express();
const port = 3000;

// Middleware
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));
app.use(express.static(__dirname));

// MySQL connection setup
const db = mysql.createConnection({
  host: 'localhost',
  user: 'root',           // your MySQL username
  password: 'Rajkayal@05', // your MySQL password
  database: 'user_db'
});

db.connect(err => {
  if (err) {
    console.error('Database connection failed:', err);
    return;
  }
  console.log('âœ… Connected to MySQL database.');
});

// API to add a new user
app.post('/adduser', (req, res) => {
  const { name, email, address, password } = req.body;

  const sql = 'INSERT INTO users3 (name, email, address, password) VALUES (?, ?, ?, ?)';
  db.query(sql, [name, email, address, password], (err, result) => {
    if (err) {
      console.error('Error inserting data:', err);
      res.status(500).send('Error adding user');
    } else {
      res.send('âœ… User added successfully!');
    }
  });
});

// API to retrieve all users
app.get('/users', (req, res) => {
  const sql = 'SELECT id, name, email, address FROM users3'; // omit password for security
  db.query(sql, (err, results) => {
    if (err) {
      console.error('Error fetching users:', err);
      res.status(500).send('Error fetching users');
    } else {
      res.json(results);
    }
  });
});

// API to update user
app.post('/updateuser', (req, res) => {
  const { id, name, email, address } = req.body;

  const sql = 'UPDATE users3 SET name = ?, email = ?, address = ? WHERE id = ?';
  db.query(sql, [name, email, address, id], (err, result) => {
    if (err) {
      console.error('Error updating user:', err);
      res.status(500).send('Error updating user');
    } else {
      res.send('âœ… User updated successfully!');
    }
  });
});

// API to delete user
app.post('/deleteuser', (req, res) => {
  const { id } = req.body;

  const sql = 'DELETE FROM users3 WHERE id = ?';
  db.query(sql, [id], (err, result) => {
    if (err) {
      console.error('Error deleting user:', err);
      res.status(500).send('Error deleting user');
    } else {
      res.send('âœ… User deleted successfully!');
    }
  });
});

// Start server
app.listen(port, () => {
  console.log(`ðŸš€ Server running at http://localhost:${port}`);
});


index2.html

<!DOCTYPE html>
<html ng-app="crudApp">
<head>
  <meta charset="UTF-8">
  <title>Simple AngularJS + Node.js + MySQL CRUD</title>
  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
  <style>
    body { font-family: Arial; margin: 40px; }
    input, button { padding: 6px; margin: 5px; }
    .edit-mode { background-color: #ffffcc; }
    table { border-collapse: collapse; width: 100%; margin-top: 20px; }
    th, td { border: 1px solid #ccc; padding: 10px; }
  </style>
</head>
<body ng-controller="MainCtrl">
  <h2>User Management</h2>

  <form ng-submit="submitUser()">
    <input type="hidden" ng-model="user.id">
    <input type="text" ng-model="user.name" placeholder="Name" required>
    <input type="email" ng-model="user.email" placeholder="Email" required>
    <input type="text" ng-model="user.address" placeholder="Address" required>
    <button type="submit">{{ user.id ? 'Update' : 'Add' }} User</button>
    <button type="button" ng-click="resetForm()">Clear</button>
  </form>

  <table>
    <thead>
      <tr>
        <th>ID</th><th>Name</th><th>Email</th><th>Address</th><th>Actions</th>
      </tr>
    </thead>
    <tbody>
      <tr ng-repeat="u in users">
        <td>{{ u.id }}</td>
        <td>{{ u.name }}</td>
        <td>{{ u.email }}</td>
        <td>{{ u.address }}</td>
        <td>
          <button ng-click="editUser(u)">Edit</button>
          <button ng-click="deleteUser(u.id)">Delete</button>
        </td>
      </tr>
    </tbody>
  </table>

  <script>
    angular.module('crudApp', [])
      .controller('MainCtrl', function($scope, $http) {
        const loadUsers = () => {
          $http.get('/users').then(res => $scope.users = res.data);
        };

        $scope.user = {};

        $scope.submitUser = () => {
          const url = $scope.user.id ? '/updateuser' : '/adduser';
          $http.post(url, $scope.user).then(() => {
            $scope.resetForm();
            loadUsers();
          });
        };

        $scope.editUser = (u) => {
          $scope.user = angular.copy(u);
        };

        $scope.deleteUser = (id) => {
          if (confirm('Are you sure you want to delete this user?')) {
            $http.post('/deleteuser', { id }).then(() => loadUsers());
          }
        };

        $scope.resetForm = () => {
          $scope.user = {};
        };

        loadUsers(); // Initial fetch
      });
  </script>
</body>
</html>
